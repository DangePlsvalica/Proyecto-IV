generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-1.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = "postgresql://Comunas_owner:npg_DaBAd7Tfmu5V@ep-bold-heart-a5vx15un-pooler.us-east-2.aws.neon.tech/Comunas?sslmode=require"
}

model Role {
  id      String  @id @default(uuid())
  name    String  @unique
  routes  String[]
  users   User[]  
}

model User {
  id             String    @id @default(uuid())
  email          String    @unique
  emailVerified  DateTime?
  roleId         String?
  role           Role?      @relation(fields: [roleId], references: [id])
  hashedPassword String?
  accounts       Account[]
  sessions       Session[]
}

model Account {
  id                String  @id @default(uuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Session {
  id           String   @id @default(uuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Parroquia {
  id         Int     @id @default(autoincrement())
  nombre     String
  municipio  String
  estado     String  @default("Yaracuy")
  comunas    Comuna[]
  cc         ConsejoComunal[]
}

model Persona {
  id         Int     @id @default(autoincrement())
  nombres    String
  apellidos  String
  ci         String
  telefono   String
  vehiculo   Vehiculo?
  cc         ConsejoComunal? @relation("VoceroRelation")
}

model Proyecto {
  id                String   @id @default(uuid())
  nombre            String   @unique
  status            String
  fechaCreacion     DateTime
  ultimaActividad   DateTime
  categoria         String
  comuna            String
}

model ConsejoComunal {
  id                String @id @default(uuid())
  parroquiaRelation Parroquia? @relation(fields: [parroquiaId], references: [id])
  parroquiaId       Int?  
  cc                String @unique
  rif               String @unique
  numeroCuenta      String
  fechaConstitucion DateTime
  fechaVencimiento  DateTime
  voceroId          Int? @unique
  vocero            Persona? @relation("VoceroRelation", fields: [voceroId], references: [id])
  poblacionVotante  Int
  comunaId          String?  // Clave foránea
  comuna            Comuna? @relation(fields: [comunaId], references: [id], onDelete: SetNull)
  vehiculos         Vehiculo[] // 1:N
}

model Comuna {
  id                        String @id @default(uuid()) 
  codigo                    String  
  numComisionPromotora      String  
  fechaComisionPromotora    DateTime  
  rif                       String  
  cuentaBancaria            String  
  fechaRegistro             DateTime  
  nombre                    String  
  direccion                 String  
  linderoNorte              String  
  linderoSur                String  
  linderoEste               String  
  linderoOeste              String  
  fechaUltimaEleccion       DateTime  
  parroquiaRelation         Parroquia? @relation(fields: [parroquiaId], references: [id])
  parroquiaId               Int?  
  nombreVocero              String  
  ciVocero                  String  
  telefono                  String  
  cantidadConsejosComunales Int  
  poblacionVotante          Int  
  consejosComunales         ConsejoComunal[] // Relación 1-N
}

enum VehiculoStatus {
  asignado
  reasignado
  extraviado
  devuelto_a_caracas
  inactivo
}

model Vehiculo {
  id                Int      @id @default(autoincrement()) 
  placa             String   
  clase             String   
  cc                String?    
  marca             String   
  modelo            String   
  color             String   
  ano               Int      
  serialCarroceria  String   
  voceroAsignado    Persona?   @relation(fields: [voceroAsignadoId], references: [id])
  voceroAsignadoId  Int?       @unique
  fechaDeEntrega    DateTime 
  estatus           VehiculoStatus  @default(asignado)
  observacionArchivo String?   
  observacion       String?  
  consejoComunal    ConsejoComunal? @relation(fields: [cc], references: [cc])
}

