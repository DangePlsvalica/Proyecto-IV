generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-1.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = "postgresql://Comunas_owner:npg_DaBAd7Tfmu5V@ep-bold-heart-a5vx15un-pooler.us-east-2.aws.neon.tech/Comunas?sslmode=require" //env("DATABASE_URL")
}

enum Role {
  user
  Admin
}

model User {
  id             String    @id @default(uuid())
  name           String?
  email          String    @unique
  emailVerified  DateTime?
  role           Role      @default(user) // Enum con valores `user` y `Admin`
  image          String?
  hashedPassword String?
  accounts       Account[]
  sessions       Session[]
}

model Account {
  id                String  @id @default(uuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Session {
  id           String   @id @default(uuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Proyecto {
  id                String   @id @default(uuid())
  nombre            String   @unique
  status            String
  fechaCreacion     DateTime
  ultimaActividad   DateTime
  categoria         String
  comuna             String
}

model ConsejoComunal {
  id                String @id @default(uuid())
  estado            String
  municipio         String
  parroquia         String
  cc                String
  rif               String @unique
  numeroCuenta      String
  fechaConstitucion DateTime
  fechaVencimiento  DateTime
  vocero            String
  tlfVocero         String
  poblacionVotante  Int
}

model Comuna {
  id                        String @id @default(uuid()) // Código único (Código)
  codigo                    String // Código de la comuna
  numComisionPromotora      String // N° comisión promotora
  fechaComisionPromotora    DateTime // FECHA DE COMISIÓN PROMOTORA
  rif                       String // RIF
  cuentaBancaria            String // CUENTA BANCARIA
  fechaRegistro             DateTime // FECHA DE REGISTRO DE LA COMUNA
  nombre                    String // NOMBRE DE LA COMUNA
  direccion                 String // DIRECCIÓN DE LA COMUNA
  linderoNorte              String // LINDERO NORTE
  linderoSur                String // LINDERO SUR
  linderoEste               String // LINDERO ESTE
  linderoOeste              String // LINDERO OESTE
  consejoComunal            Json // CONSEJO COMUNAL QUE INTEGRA LA COMUNA
  fechaUltimaEleccion       DateTime // FECHA DE ÚLTIMA ELECCIÓN
  municipio                 String // MUNICIPIO
  parroquia                 String // PARROQUIA
  nombreVocero              String // NOMBRE Y APELLIDOS DEL VOCERO
  ciVocero                  String // C.I del vocero
  telefono                  String // TELEFONO
  cantidadConsejosComunales Int // CANTIDAD DE C.C QUE INTEGRA LA COMUNA
  poblacionVotante          Int // POBLACIÓN VOTANTE
}

model Vehiculo {
  id                Int      @id @default(autoincrement()) // ID único
  placa             String   // Placa del ítem
  clase             String   // Clase del ítem
  cc                String   // CC (Cilindrada u otra información)
  comuna            String   // Comuna asociada
  marca             String   // Marca del ítem
  modelo            String   // Modelo del ítem
  color             String   // Color del ítem
  ano               Int      // Año de fabricación
  municipio         String   // Municipio asociado
  serialCarroceria  String   // Serial de la carrocería
  voceroAsignado    String   // Nombre del vocero asignado
  fechaDeEntrega    DateTime // Fecha de entrega
  estatus           String   // Estatus del ítem
  observacionArchivo String?   // URL o referencia del archivo PDF/Word relacionado con la observación
  observacion       String?  // Observación textual (opcional)
}

